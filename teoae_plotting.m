function teoae_plotting(Data,Config)

global respArea noiseArea respbutton noisebutton ProcFigure

A=Data.A; B=Data.B; fs=Config.Fs;

%% processing part

A_av=mean(A,2);
B_av=mean(B,2);

repro=corr(A_av,B_av)*100; % percentage

A_av=A_av'; B_av=B_av';
mean_response=(A_av+B_av)/2;
noise=(A_av-B_av)/2;

r=find(abs(mean_response)>0,1);
RMS=20*log10(sqrt(mean(mean_response(r:end).^2))/20e-6);
noiseRMS=20*log10(sqrt(mean(noise(r:end).^2))/20e-6);

nfft1=length(mean_response(r:end)); 
spectrum=2*abs(fft(mean_response(r:end)))/nfft1;
spectrum=20*log10(spectrum(1:nfft1/2)/20e-6);
noise_spectrum=2*abs(fft(noise(r:end),nfft1))/nfft1;
noise_spectrum=20*log10(noise_spectrum(1:nfft1/2)/20e-6);

%% plotting part

t=(0:1/fs:(length(mean_response)-1)/fs)*1000;
f=0:fs/nfft1:fs/2-fs/nfft1;

scrsize=get(0,'ScreenSize');
ProcFigure = figure;
set(ProcFigure,'OuterPosition',[0 30 scrsize(3) scrsize(4)-30])
axes('parent',ProcFigure,...
    'OuterPosition',[0 0.5 0.8 0.5],...
    'xlim',[0 20])
line('XData',t,'YData',A_av*1000,'Color','g')
line('XData',t,'YData',B_av*1000,'Color','b')

xlabel('Time [ms]')
ylabel('Averaged response waveforms [mPa]')    
legend('waveform A','waveform B','Location','NorthWest')

fqax = axes('parent',ProcFigure,...
    'OuterPosition',[0 0 0.8 0.5]);
respArea = area('parent',fqax,f,spectrum,'Facecolor','g',...
    'BaseValue',-100);
hold on
noiseArea = area('parent',fqax,f,noise_spectrum,'Facecolor','r',...
    'BaseValue',-100);

set(fqax,'xlim',[0 6000],...
    'XTick',[1000 2000 3000 4000 5000],...
    'ylim',[-60 20])
xlabel('Frequency [Hz]')
ylabel('Mean response spectrum [dB SPL]')
legend('Response','Noise')
grid on
set(gca,'Layer','top')

patientPan = uipanel(ProcFigure,...
    'BorderType','etchedin',...
    'Units','normalized',...
    'Position',[0.76 0.7 0.2 0.25],...
    'Fontsize',9,...
    'FontWeight','bold',...
    'Title','Patient info');

if strcmp(Data.Ear,'L')
    ear='Left ear';
else ear='Right ear';
end

patientText = sprintf(['\n   Patient ID: ' Data.PatientID ...
    '\n\n   ' ear]);

uicontrol(patientPan,...
    'Style','text',...
    'Units','normalized',...
    'Position',[0 0 1 1],...
    'HorizontalAlignment','left',...
    'String',patientText,...
    'Fontsize',10); 

pan = uipanel(ProcFigure,...
    'BorderType','etchedin',...
    'Units','normalized',...
    'Position',[0.76 0.5 0.2 0.3],...
    'Fontsize',9,...
    'FontWeight','bold',...
    'Title','TEOAE measurement results');
    

resultTekst=sprintf(['\n    Reproducibility:\n' '     ' num2str(round(100*repro)/100)...
    '%%\n\n\n   Mean response RMS:\n' '     ' num2str(round(100*RMS)/100) 'dB SPL\n\n'...
    '   Noise RMS:\n' '     ' num2str(round(100*noiseRMS)/100) 'dB SPL']);   

uicontrol(pan,...
    'Style','text',...
    'Units','normalized',...
    'Position',[0 0 1 1],...
    'HorizontalAlignment','left',...
    'String',resultTekst,...
    'Fontsize',10); 

FFTpan = uipanel(ProcFigure,...
    'BorderType','etchedin',...
    'Units','normalized',...
    'Position',[0.76 0.3 0.2 0.15],...
    'Fontsize',9,...
    'FontWeight','bold',...
    'Title','Spectrum plot options');

respbutton = uicontrol(FFTpan,...
    'Style','pushbutton',...
    'Units','normalized',...
    'Position',[0 0.5 1 0.5],...
    'Fontsize',10,...
    'FontWeight','normal',...
    'String','Response off',...
    'Callback',{@hideAreas,1});

noisebutton = uicontrol(FFTpan,...
    'Style','pushbutton',...
    'Units','normalized',...
    'Position',[0 0 1 0.5],...
    'Fontsize',10,...
    'FontWeight','normal',...
    'String','Noise off',...
    'Callback',{@hideAreas,2});

uicontrol(ProcFigure,...
    'Style','pushbutton',...
    'Units','normalized',...
    'Position',[0.76 0.05 0.2 0.1],...
    'Fontsize',10,...
    'FontWeight','normal',...
    'String','CLOSE FIGURE',...
    'Callback',@closefigure);

end

function hideAreas(~,~,act)
global respArea noiseArea respbutton noisebutton

if act==1
    switch get(respArea,'Visible')
        case 'on'
            set(respArea,'Visible','off');
            set(respbutton,'String','Response on');
        case 'off'
            set(respArea,'Visible','on');
            set(respbutton,'String','Response off');
    end
end   
    
if act==2
    switch get(noiseArea,'Visible')
        case 'on'
            set(noiseArea,'Visible','off');
            set(noisebutton,'String','Noise on');
        case 'off'
            set(noiseArea,'Visible','on');
            set(noisebutton,'String','Noise off');
    end
end 
    
drawnow
end

function closefigure(~,~)
global ProcFigure
close(ProcFigure)
end